name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: StatusUpdater.sln
      Test_Project_Path: StatusUpdater.Tests\StatusUpdater.Tests.csproj  # Optional – entfernen, wenn du kein Testprojekt hast
      Wap_Project_Directory: StatusUpdater                               # falls du später MSIX baust, sonst egal
      Wap_Project_Path: StatusUpdater\StatusUpdater.csproj              # WAP wäre sonst `.wapproj`

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Execute unit tests
      run: dotnet test ${{ env.Test_Project_Path }}
      continue-on-error: true   # optional, wenn kein Testprojekt da ist

    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Build the application
      run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Optional: App-Package erstellen (nur wenn du wirklich MSIX o. Ä. erstellst)
    # Sonst kannst du folgenden Block löschen oder anpassen:
    # - name: Create the app package
    #   run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration ...

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Build Output
        path: '**\bin\${{ matrix.configuration }}\**\*.exe'
